--------------Video ---------

	Different types of Methods parameters 
	......4 Types of Methods Parameters.....
	1) Value parameters 
	2) Reference Parameters
	3)Out parameters 
	(4) Parameter Array 

	Methods Parameters vs Mehtods Arguments


	Diference between Pass by value/reference 

	1) Pass by value 
	Variables are pointing to different memory Location.Operations on one variable 
	will not affect the value of other variable.
	
	2) Refference value 

	Both variables Pointing to the same memory loacation.Operation on one variable will affect 
	the value of other variable.

	3) Out parameters 

	When you want a method to return more than one value

	4) Parameters Array 
	
	 let you  specify  a method paramter that takes a variable numbr of arguments.
	 Comma separated list of elements. 
	Params keyword should be last one in a method declaration,, and only one paramas
	keyword is permitted in a method declaration.


	----------- Video 18 -------------

	namespaces in C# and how they can be used to organize code and avoid name clashes
	in large projects. It also demonstrates how to use alias directives to create 
	shorter namespace names and avoid ambiguity.
	In this part of the c sharp tutorial we will learn 
1. Namespace basics 
2. Using alias directive
3. Avoiding namespace ambiguity
4. Different namespace members

Both namespace having class there is an ambiguaity, and there is 
TWO ways to resolve this Ambiguity
i) One is using Fuilly Quailfied name
ii) Namespace Aliase Directives 

Namesace don't correspond to file, directory or assesmbly names. They could be
written in separate files and / or separate assemblies and still belong
to the same namespaces.

..............  Video 19 ...........
Class:
want to Create the complesx custome types, you can  use class
A class consist of data and behavior. Class data is represented by it's
fileds and behavior is represented by methods.

 -> Constructors:
Constructars used to  initialzes class fields ,Same name as of class, 
and it Does not return value, but it can take Parameters .
Called automatically when you create an instance of class.


->Default Parameter less Constructor

->Overload Constructor 
same name of another constructor toa Particular class . Overload a constructor 
with a number and type of parameters.
- > Distructors
Same name as of class name, but dont take any parameters , initilize
using the ~(tild sign).
Using clean up any resources your class holding during the lifetime, called automatically
by the garbage collector 

This Keyword:

Refers to an instance of this class to an object of the class


-------------------------=============---------------------------------------------------------------

------------  -----------------------     Video 20 -------------------------------------------------------

-------------- >   PI IS StaticAnd Radius id is an instance Field  <...................

->When you make static then only one copy of that PI will be shared by
all the objects that you create
->if something not change in pair obejctive basis then wise to mark them static
-> You can not use "this(instance of a class) keyword" " in static filed
you can use name of the class
->static members invoke using name of a class, and instance members are invke
using the instance or object of a class
static constructor called before the intance  consstructor called