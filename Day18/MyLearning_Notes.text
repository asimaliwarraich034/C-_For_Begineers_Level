Video No 48

The difference between Types and Type Members
Organising code with regions

Types Vs Type Members
In this example Customer is the Type and fields, Properties and method are type members.
So, in general classes, structs, enums, interfaces, delegates are called as types and fields, properties, constructors, methods etc.,
that normally reside in a type are called as type members.
In C# there are 5 different access modifiers:
﻿﻿﻿Private
﻿﻿﻿Protected
﻿﻿﻿Internal
﻿﻿﻿Protected Internal
﻿﻿﻿Public
Type members can have all the access modifiers, where as types can have only 2 (internal, public) of the 5 access modifiers
Note: Using regions you can expand and collapse sections of your code either manually, 
or using visual studio Edit -> Outlining-> Toggle All Outlining

--------------------------------
Video No 49

Access modifiers in C# are used to specify the scope of accessibility of a member of a class or type of the class itself.
there are 5 Access Modifiers in C#
1. Public
2. Private
3. Protected
4. Internal
5. Protected Internal
Private members are available only with in the containing type, where as public members are available any where. There is no restriction.
Protected Members are available, with in the containing type and to the types that derive from the containing type.



