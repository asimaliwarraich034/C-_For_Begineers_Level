
-------------------------------------Video No 36------------------------
-> Basics of Delegates
-> A delegate is a type safe function pointer. That is, it holds a 
reference (pointer) to a function.

Mean delegate points to a function and then when you invoke
this delegate the function will be invoked
Delegates give us lot of flexibilty in real-time projects

-> The siginiture of the delgates must match the signiture of the function
the delgate points to, otherwise you get a compiler error.this is the reason
delegates are called as type safe function pointer.

-> Except the delegate keyword the syntax of the Delegate very much 
similar to a method
-------------------------------------------------------------------------------------------------

------------------------------------Video No 37-------------------------------

In this part we will create an employee class which form the basis for using delegates.
This is the hard codeed logic we only promote to the experience not reusable 

Next video we see by using delegates to allow users to plug in their own logic.
Delegates provide flexibility in passing methods as parameters to other methods.

-------------------------------------------------------------------------------------------------------

-------------------------------------------Video No 38------------------------
-> DeLegates are extensively used by Frameworks Developers
And want the classes and methods are reusable and this is posible with 
the help of delegates.
--------------------------------------------------------------------------------------------------------------

----------------------------------------------Video No 39--------------------------
-> Multicast Delegates
A Multicast delegate is a delegate that has reference to more than 
one function. When you invoke a multicast delegate, all the delegate is 
pointing to, are invoked.

-> Thete are two ways to create a multicast delegates, Depending on approach

i) + or += to register a method with delgate
ii) - or -= to unregister a method with delegate

Note: A multicast delegate, invokes the method in the invokation list,
in the same order in which they are added.

 Let's Assume if function going to return some value , then the delgates 
 have the same signiture as point to the functions respectively
 and if ther delegates is multicast delegate, only the value of
 the last invoked method will be returned. Along the same lines, if the delgate
 has an out parameter , the value of the out parameter , will be the value
 assigned by the last method.










